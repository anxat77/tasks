unit TestJSON;
{
  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.
}

interface

uses
  TestFramework, System.Generics.Collections, MainClasses;

type
  // Test methods for class TDriverList

  TestTDriverList = class(TTestCase)
  strict private
    FDriverList: TDriverList;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestLoadFromJSON;
    procedure TestSaveToJSON;
  end;
  // Test methods for class TAutoList

  TestTAutoList = class(TTestCase)
  strict private
    FAutoList: TAutoList;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestLoadFromJSON;
    procedure TestSaveToJSON;
  end;

  // Test methods for class TTripList

  TestTTripList = class(TTestCase)
  strict private
    FTripList: TTripList;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestLoadFromJSON;
    procedure TestSaveToJSON;
  end;


implementation

uses
  System.SysUtils;

procedure TestTDriverList.SetUp;
begin
  FDriverList := TDriverList.Create;
end;

procedure TestTDriverList.TearDown;
begin
  FDriverList.Free;
  FDriverList := nil;
end;

procedure TestTDriverList.TestLoadFromJSON;
begin
  Check(FDriverList.LoadFromJSON('..\..\JsonTxt\BaseJson.txt'));

  Check(FDriverList.Count = 3);

  Check(FDriverList[0].Name = 'Frank Martin');
  Check(FDriverList[0].Phone = '555-0100');

  Check(FDriverList[1].Name = 'Travis Bickle');
  Check(FDriverList[1].Phone = '555-0123');

  Check(FDriverList[2].Name = 'Daniel Moralex');
  Check(FDriverList[2].Phone = '555-0130');
end;

procedure TestTDriverList.TestSaveToJSON;
begin

  FDriverList.Add(TDriver.Create);
  FDriverList.Last.ID := 1;
  FDriverList.Last.Name := 'Frank Martin';
  FDriverList.Last.Phone := '555-0100';

  FDriverList.Add(TDriver.Create);
  FDriverList.Last.ID := 2;
  FDriverList.Last.Name := 'Travis Bickle';
  FDriverList.Last.Phone := '555-0123';

  Check(FDriverList.SaveToJSON('..\..\JsonTxt\SaveDriver.txt'));

  //----------------------
  Check(FDriverList.LoadFromJSON('..\..\JsonTxt\SaveDriver.txt'));

  Check(FDriverList.Count = 2);

  Check(FDriverList[0].Name = 'Frank Martin');
  Check(FDriverList[0].Phone = '555-0100');

  Check(FDriverList[1].Name = 'Travis Bickle');
  Check(FDriverList[1].Phone = '555-0123');

end;

procedure TestTAutoList.SetUp;
begin
  FAutoList := TAutoList.Create;
end;

procedure TestTAutoList.TearDown;
begin
  FAutoList.Free;
  FAutoList := nil;
end;

procedure TestTAutoList.TestLoadFromJSON;
begin
  Check(FAutoList.LoadFromJSON('..\..\JsonTxt\BaseJson.txt'));

  Check(FAutoList.Count = 3);

  Check(FAutoList[0].Brand = 'Peugeot');
  Check(FAutoList[0].Model = '406');
  Check(FAutoList[0].Color = 'White');

  Check(FAutoList[1].Brand = 'BMW');
  Check(FAutoList[1].Model = '735i');
  Check(FAutoList[1].Color = 'Brown');
  Check(FAutoList[1].Number = '930UHV06');

  Check(FAutoList[2].Brand = 'Checker Taxi');
  Check(FAutoList[2].Color = 'Yellow');

end;

procedure TestTAutoList.TestSaveToJSON;
begin

  FAutoList.Add(TAuto.Create);
  FAutoList.Last.ID := 1;
  FAutoList.Last.Brand := 'Peugeot';
  FAutoList.Last.Model := '406';
  FAutoList.Last.Color := 'White';

  FAutoList.Add(TAuto.Create);
  FAutoList.Last.ID := 2;
  FAutoList.Last.Brand := 'BMW';
  FAutoList.Last.Model := '735i';
  FAutoList.Last.Color := 'Brown';
  FAutoList.Last.Number := '930UHV06';

  Check(FAutoList.SaveToJSON('..\..\JsonTxt\SaveAuto.txt'));

  //----------------------

  Check(FAutoList.LoadFromJSON('..\..\JsonTxt\SaveAuto.txt'));

  Check(FAutoList.Count = 2);

  Check(FAutoList[0].Brand = 'Peugeot');
  Check(FAutoList[0].Model = '406');
  Check(FAutoList[0].Color = 'White');

  Check(FAutoList[1].Brand = 'BMW');
  Check(FAutoList[1].Model = '735i');
  Check(FAutoList[1].Color = 'Brown');
  Check(FAutoList[1].Number = '930UHV06');

end;

{ TestTTripList }

procedure TestTTripList.SetUp;
begin
  FTripList := TTripList.Create;
end;


procedure TestTTripList.TearDown;
begin
  FTripList.Free;
  FTripList := nil;
end;

procedure TestTTripList.TestLoadFromJSON;
var
  DD: TDateTime;
begin
  Check(FTripList.LoadFromJSON('..\..\JsonTxt\TripJson.txt'));

  Check(FTripList.Count = 3);

  Check(FTripList[0].AutoID = 1);
  Check(FTripList[0].DriverID = 2);
  DD := EncodeDate(2021, 1, 15) + EncodeTime(22, 0, 0, 0);
  Check(FTripList[0].StartTime = DD);

  Check(FTripList[1].AutoID = 2);
  Check(FTripList[1].DriverID = 3);
  DD := EncodeDate(2021, 5, 5) + EncodeTime(12, 0, 0, 0);
  Check(FTripList[1].StartTime = DD);

  Check(FTripList[2].AutoID = 3);
  Check(FTripList[2].DriverID = 1);
  DD := EncodeDate(2021, 7, 25) + EncodeTime(2, 0, 0, 0);
  Check(FTripList[2].StartTime = DD);

end;

procedure TestTTripList.TestSaveToJSON;
var
  DD: TDateTime;
begin
  FTripList.Add(TTrip.Create);
  FTripList.Last.AutoID := 2;
  FTripList.Last.DriverID := 1;
  FTripList.Last.StartTime := EncodeDate(2021, 2, 2) + EncodeTime(12, 12, 0, 0);


  Check(FTripList.SaveToJSON('..\..\JsonTxt\SaveTrip.txt'));

  //----------------------

  Check(FTripList.LoadFromJSON('..\..\JsonTxt\SaveTrip.txt'));

  Check(FTripList.Count = 1);

  Check(FTripList[0].AutoID = 2);
  Check(FTripList[0].DriverID = 1);
  DD := EncodeDate(2021, 2, 2) + EncodeTime(12, 12, 0, 0);
  Check(FTripList[0].StartTime = DD);

end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTDriverList.Suite);
  RegisterTest(TestTAutoList.Suite);
  RegisterTest(TestTTripList.Suite);
end.
